# Start an embedded server for offline manipulation of the standalone.xml configuration file
embed-server

# Increase management operation timeout to 900 seconds to prevent timeouts during configuration
/system-property=jboss.as.management.blocking.timeout:add(value=900)

# Configure the logging subsystem
# Add a size-rotating file handler named 'srf' that writes to 'server.log',
# rotates the log when it reaches 1GB, keeps up to 64 backup files,
# appends to existing logs, auto-flushes, rotates on boot, and uses the 'PATTERN' formatter
/subsystem=logging/size-rotating-file-handler=srf:add(
    file={"relative-to"=>"jboss.server.log.dir", "path"=>"server.log"},
    rotate-size="1g",
    max-backup-index=64,
    append=true,
    autoflush=true,
    rotate-on-boot=true,
    named-formatter=PATTERN
)

# Add the 'srf' handler to the root logger so all log messages are handled by 'srf'
/subsystem=logging/root-logger=ROOT:add-handler(name="srf")

# Configure the deployment scanner subsystem
# Increase deployment timeout to 900 seconds to allow for large deployments
/subsystem=deployment-scanner/scanner=default:write-attribute(name="deployment-timeout", value="900")

# Configure Undertow (web server) subsystem
# Increase maximum POST size to 1GB for both HTTP and HTTPS listeners to handle large requests
/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name="max-post-size", value="1073741824")
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name="max-post-size", value="1073741824")

# Configure socket bindings
# Set the HTTP port to the value of 'jboss.http.port' system property, or default to 9090 if not set
/socket-binding-group=standard-sockets/socket-binding=http:write-attribute(name=port, value="${jboss.http.port:9090}")

# Add Project Management (PM) datasource
data-source add --name=PMBootStrapDS \
    --jndi-name=java:/PMBootStrapDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2pm \
    --user-name=i2b2pm \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Clinical Research Chart (CRC) datasources
# Add Bootstrap datasource for CRC
data-source add --name=CRCBootStrapDS \
    --jndi-name=java:/CRCBootStrapDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2hive \
    --user-name=i2b2hive \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Add Query Tool Demo datasource
data-source add --name=QueryToolDemoDS \
    --jndi-name=java:/QueryToolDemoDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2crcdata \
    --user-name=i2b2crcdata \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Identity Management (IM) datasources
# Add Bootstrap datasource for IM
data-source add --name=IMBootStrapDS \
    --jndi-name=java:/IMBootStrapDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2hive \
    --user-name=i2b2hive \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Add IM Demo datasource
data-source add --name=IMDemoDS \
    --jndi-name=java:/IMDemoDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2imdata \
    --user-name=i2b2imdata \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Ontology (ONT) datasources
# Add Bootstrap datasource for Ontology
data-source add --name=OntologyBootStrapDS \
    --jndi-name=java:/OntologyBootStrapDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2hive \
    --user-name=i2b2hive \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Add Ontology Demo datasource
data-source add --name=OntologyDemoDS \
    --jndi-name=java:/OntologyDemoDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2metadata \
    --user-name=i2b2metadata \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Workplace (WORK) datasources
# Bootstrap datasource for Workplace
data-source add --name=WorkplaceBootStrapDS \
    --jndi-name=java:/WorkplaceBootStrapDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2hive \
    --user-name=i2b2hive \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Workplace Demo datasource
data-source add --name=WorkplaceDemoDS \
    --jndi-name=java:/WorkplaceDemoDS \
    --driver-name=postgresql-42.7.3.jar \
    --driver-class=org.postgresql.Driver \
    --connection-url=jdbc:postgresql://${env.DB_HOST:localhost}:${env.DB_PORT:5432}/i2b2?searchPath=i2b2metadata \
    --user-name=i2b2metadata \
    --password=demouser \
    --jta=false \
    --use-ccm=false

# Configure validation and statement settings for all datasources
for dataSource in /subsystem=datasources:read-children-names(child-type=data-source)
    # Disable validation on match to improve performance
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=validate-on-match,value=false)

    # Enable background validation to check connections periodically
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=background-validation,value=true)

    # Set background validation interval to 60000 milliseconds (1 minute)
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=background-validation-millis,value=60000)

    # Enable fast fail to fail quickly if a connection is invalid
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=use-fast-fail,value=true)

    # Set SQL query used to validate connections
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=check-valid-connection-sql,value="SELECT 1")

    # Configure statement settings
    # Disable shared prepared statements
    /subsystem=datasources/data-source=$dataSource:write-attribute(name=share-prepared-statements,value=false)
done

# Stop the embedded server to save changes and exit
stop-embedded-server
