#!/bin/bash
#--------------------------------------
# Script Name:  preinst
# Version:      1.2
# Authors:      skurka@ukaachen.de, shuening@ukaachen.de, akombeiz@ukaachen.de
# Date:         07 Nov 24
# Purpose:      Prepares the system for new package installation by cleaning up WildFly deployment markers and setting up backup triggers.
#--------------------------------------

log_info() { echo -e "\033[0;34m[INFO]\033[0m $1"; }
log_success() { echo -e "\033[0;32m[SUCCESS]\033[0m $1"; }
log_warn() { echo -e "\033[1;33m[WARN]\033[0m $1"; }
log_error() { echo -e "\033[0;31m[ERROR]\033[0m $1" >&2; }

readonly OPERATION="${1}"

backup_wildfly_logs() {
  local log_dir="/opt/wildfly/standalone/log"
  local backup_dir="/var/backups/${DPKG_MAINTSCRIPT_PACKAGE}/wildfly_logs"
  local date_suffix=$(date '+%Y%m%d_%H%M%S')
  log_info "Backing up WildFly logs..."

  if [[ ! -d "${log_dir}" ]]; then
    log_warn "No WildFly logs found for backup"
    return 0
  fi

  mkdir -p "${backup_dir}"
  # Copy all logs to backup directory
  find "${log_dir}" -type f \( -name "*.log" -o -name "*.log.[0-9]*" \) | while read -r log_file; do
    local filename=$(basename "${log_file}")
    local backup_name

    if [[ "${filename}" =~ ^(.+)\.log\.([0-9]+)$ ]]; then
      # Handle rotated logs (e.g., server.log.1 -> server.1_20241107_143022.log)
      backup_name="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}_${date_suffix}.log"
    else
      # Handle regular logs (e.g., server.log -> server_20241107_143022.log)
      backup_name="${filename%.*}_${date_suffix}.log"
    fi

    local backup_file="${backup_dir}/${backup_name}"
    if cp "${log_file}" "${backup_file}"; then
      log_success "Backed up: ${filename} -> ${backup_name}"
    else
      log_error "Failed to backup: ${filename}"
    fi
  done
}

main() {
  set -euo pipefail
  case "$OPERATION" in
    install)
      # Runs during installation before files have been unpacked.
      ;;
    upgrade)
      # Runs during package upgrade before files have been unpacked.
      backup_wildfly_logs
      dpkg-trigger --no-await "${DPKG_MAINTSCRIPT_PACKAGE}"/backup
      ;;
  esac
}

main "$@"
